{
  "name": "librechat-cdk",
  "version": "2.0.0",
  "description": "AWS CDK deployment for LibreChat Enterprise with Bedrock, pgvector, DocumentDB, and RAG",
  "main": "lib/librechat-stack.js",
  "bin": {
    "librechat": "bin/librechat.js"
  },
  "scripts": {
    "build": "tsc",
    "watch": "tsc -w",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "cdk": "cdk",
    "synth": "AWS_SDK_LOAD_CONFIG=1 npm run build && cdk synth",
    "diff": "AWS_SDK_LOAD_CONFIG=1 npm run build && cdk diff",
    "deploy": "AWS_SDK_LOAD_CONFIG=1 npm run build && cdk deploy",
    "deploy:verbose": "AWS_SDK_LOAD_CONFIG=1 ./deploy.sh --verbose",
    "deploy:fast": "AWS_SDK_LOAD_CONFIG=1 RESOURCE_SIZE=xs FAST_DEPLOY=true npm run build && cdk deploy --all --concurrency 10 --require-approval never",
    "deploy:dev": "AWS_SDK_LOAD_CONFIG=1 npm run build && cdk deploy -c configSource=standard-dev",
    "deploy:staging": "AWS_SDK_LOAD_CONFIG=1 npm run build && DEPLOYMENT_ENV=staging cdk deploy",
    "deploy:prod": "AWS_SDK_LOAD_CONFIG=1 npm run build && DEPLOYMENT_ENV=production cdk deploy -c configSource=production-ecs",
    "deploy:all": "AWS_SDK_LOAD_CONFIG=1 npm run build && cdk deploy --all",
    "destroy": "AWS_SDK_LOAD_CONFIG=1 cdk destroy",
    "destroy:all": "AWS_SDK_LOAD_CONFIG=1 cdk destroy --all",
    "bootstrap": "AWS_SDK_LOAD_CONFIG=1 cdk bootstrap",
    "clean": "rm -rf cdk.out lib/*.js lib/**/*.js bin/*.js test/*.js",
    "clean:all": "npm run clean && rm -rf node_modules",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "format": "prettier --write '**/*.{ts,js,json,md}'",
    "format:check": "prettier --check '**/*.{ts,js,json,md}'",
    "validate": "npm run lint && npm run test && npm run build",
    "wizard": "AWS_SDK_LOAD_CONFIG=1 bash deploy.sh",
    "estimate-cost": "ts-node scripts/estimate-cost.ts",
    "export-template": "npm run build && cdk synth > cloudformation-template.yaml",
    "export-all-templates": "npm run build && for stack in $(cdk list); do cdk synth $stack > $stack.yaml; done",
    "check-deps": "npm outdated",
    "update-deps": "npm update",
    "update-deps:major": "npm-check-updates -u && npm install",
    "precommit": "npm run validate",
    "prepare": "husky install"
  },
  "dependencies": {
    "aws-cdk-lib": "2.150.0",
    "constructs": "^10.3.0",
    "source-map-support": "^0.5.21"
  },
  "devDependencies": {
    "@aws-sdk/client-ec2": "^3.540.0",
    "@aws-sdk/client-pricing": "^3.540.0",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.11.17",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "aws-cdk": "2.150.0",
    "chalk": "^4.1.2",
    "cli-table3": "^0.6.3",
    "dotenv": "^17.2.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.10",
    "jest": "^29.7.0",
    "npm-check-updates": "^16.14.14",
    "prettier": "^3.2.5",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typescript": "~5.3.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/naqi324/librechat-cdk.git"
  },
  "keywords": [
    "aws",
    "cdk",
    "librechat",
    "ai",
    "chat",
    "bedrock",
    "rag",
    "pgvector",
    "documentdb",
    "infrastructure-as-code"
  ],
  "author": "Your Organization",
  "bugs": {
    "url": "https://github.com/naqi324/librechat-cdk/issues"
  },
  "homepage": "https://github.com/naqi324/librechat-cdk#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "import",
      "prettier"
    ],
    "env": {
      "node": true,
      "jest": true
    },
    "rules": {
      "prettier/prettier": "error",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_"
        }
      ],
      "import/order": [
        "error",
        {
          "groups": [
            "builtin",
            "external",
            "internal",
            "parent",
            "sibling",
            "index"
          ],
          "newlines-between": "always"
        }
      ]
    }
  }
}
